[{"/Users/neel/react/ant-demo/src/App.tsx":"1","/Users/neel/react/ant-demo/src/component/SearchInput.tsx":"2","/Users/neel/react/ant-demo/src/Hooks/useFetch.ts":"3","/Users/neel/react/ant-demo/src/component/PostsTable.tsx":"4","/Users/neel/react/ant-demo/src/component/index.ts":"5"},{"size":1530,"mtime":1607440231769,"results":"6","hashOfConfig":"7"},{"size":389,"mtime":1606232992718,"results":"8","hashOfConfig":"7"},{"size":1122,"mtime":1606234011450,"results":"9","hashOfConfig":"7"},{"size":282,"mtime":1606234377790,"results":"10","hashOfConfig":"7"},{"size":110,"mtime":1606234434415,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"1u50l2v",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/neel/react/ant-demo/src/App.tsx",["23","24"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Image } from 'antd';\nimport { SearchInput, PostsTable } from './component';\nimport useFetch from './Hooks/useFetch';\n\nconst DEBOUNCE = 200;\nconst columns = [\n  {\n    title: 'AlbumId',\n    dataIndex: 'albumId',\n    key: 'albumId',\n  },\n  {\n    title: 'Title',\n    dataIndex: 'title',\n    key: 'title',\n  },\n  {\n    title: 'URL',\n    dataIndex: 'url',\n    key: 'url',\n  },\n  {\n    title: 'thumbnailUrl',\n    dataIndex: 'thumbnailUrl',\n    key: 'thumbnailUrl',\n    render: (record: any) => <Image width={50} src={record} />,\n  },\n];\n\nfunction App() {\n  const [value, setValue] = useState('');\n  const [response, error, loading, fetchIt] = useFetch<any>('https://jsonplaceholder.typicode.com/photos');\n  const [filteredPost, setFilteredPost] = useState(response);\n\n  useEffect(() => {\n    if (!response) {\n      fetchIt();\n    }\n  }, [response, fetchIt]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      const next = response.filter((data: any) => data.title.toLowerCase().includes(value));\n      setFilteredPost(next);\n    }, DEBOUNCE);\n\n    return function cleanup() {\n      clearTimeout(timer);\n    };\n  }, [response, value]);\n\n  console.log(response)\n\n  const onInputChange = (e: any) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <SearchInput onInputChange={onInputChange} value={value} />\n      <PostsTable columns={columns} dataSource={filteredPost} />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/neel/react/ant-demo/src/component/SearchInput.tsx",[],"/Users/neel/react/ant-demo/src/Hooks/useFetch.ts",["25","26"],"/Users/neel/react/ant-demo/src/component/PostsTable.tsx",[],"/Users/neel/react/ant-demo/src/component/index.ts",[],{"ruleId":"27","severity":1,"message":"28","line":34,"column":20,"nodeType":"29","messageId":"30","endLine":34,"endColumn":25},{"ruleId":"27","severity":1,"message":"31","line":34,"column":27,"nodeType":"29","messageId":"30","endLine":34,"endColumn":34},{"ruleId":"27","severity":1,"message":"32","line":1,"column":33,"nodeType":"29","messageId":"30","endLine":1,"endColumn":39},{"ruleId":"27","severity":1,"message":"33","line":1,"column":41,"nodeType":"29","messageId":"30","endLine":1,"endColumn":50},"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used."]